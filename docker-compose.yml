version: "3"

services:
  ### schulcloud client and server
  mongodbsc:
    image: mongo:3.4
    ports:
      - "27017"
    volumes:
      - 'data-sc:/data/db'
    restart: always

  server:
    image: langleu/schulcloud-server
    build: schulcloud/server
    depends_on:
      - mongodbsc
    links:
      - mongodbsc
    environment:
      - NODE_ENV=production
      - SMTP_HOST=127.0.0.1
      - SMTP_PORT=25
      - AUTHENTICATION=verylonggenericstring
      - AWS_ENDPOINT_URL=https://genericurl.com
      - AWS_SECRET_ACCESS_KEY=genericstring
      - AWS_ACCESS_KEY=genericstring
      - MONGO_URI=mongodb://mongodbsc:27017/schulcloud
      - CALENDAR_URI=http://web-calendar:3000
      - CONTENT_URI=http://deprecated:666
      - NOTIFICATION_URI=http://notification:3030
    ports:
      - "8080"
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 30s
      restart_policy:
        condition: on-failure
        delay: 10s
    restart: always

  client:
    image: langleu/schulcloud-client
    build: schulcloud/client
    depends_on:
      - mongodbsc
      - server
    links:
      - mongodbsc
      - server
    environment:
      - NODE_ENV=production
      - CALENDAR_SERVICE_ENABLED=true
      - BACKEND_URL=http://server:8080
    ports:
      - "3100"
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 30s
      restart_policy:
        condition: on-failure
        delay: 10s
    restart: always

  nginx:
    image: langleu/schulcloud-nginx-local
    build: schulcloud/nginx
    ports:
      - "80:80"
      - "8080:8080"
      - "3000:3000"
      - "3030:3030"
    links:
      - mongodbsc
      - server
      - client
      - web-calendar
      - notification
    environment:
      - NGINX_HOST=localhost
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
    restart: always

  ### calendar service
  postgres:
    image: postgres:9.5
    ports:
      - "5432"
    volumes:
      - 'data-calendar:/var/lib/postgresql/data'
    environment:
      - POSTGRES_DB=schulcloud_calendar
      - POSTGRES_USER=node
      - POSTGRES_PASSWORD=genericpassword
    restart: always

  web-calendar:
    image: langleu/schulcloud-calendar
    build: calendar/calendar-api
    ports:
      - "3000"
    depends_on:
      - postgres
    links:
      - postgres
    environment:
      - DB_PASSWORD=genericpassword
      - DB_HOST=postgres
      - DB_USERNAME=node
      - DB_DATABASE=schulcloud_calendar
      - SCHULCLOUD_BASE_PATH=http://server:8080
      - NOTIFICATION_SERVICE_BASE_PATH=http://notification:3030
      - SCHULCLOUD_ALL_USERS_FOR_UUID=http://server:8080/resolve/users/
      - SCHULCLOUD_ALL_SCOPES_FOR_TOKEN=http://server:8080/resolve/scopes/
      - NOTIFICATION_SERVICE_NEW_NOTIFICATION=http://notification:3030/messages
      - NODE_ENV=production
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
    restart: always

  ### notification service
  notification:
    image: langleu/schulcloud-notification
    build: notification/service
    ports:
      - "3030"
    depends_on:
      - mongodbsc
    links:
      - mongodbsc
    environment:
      - NODE_ENV=production
      - BASE_PATH=http://server:8080
      - AUTHENTICATION_API_ENDPOINT=/resolve/users/
      - AUTHORIZATION_API_ENDPOINT=/resolve/scopes/
      - RESOLVE_API_ENDPOINT=/resolve/users/
      - MAILS_API_ENDPOINT=/mails/
      - CALLBACK_API_ENDPOINT=/notification/callback/
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
    restart: always

# If using kompose, then comment out the following:
volumes:
  data-sc:
  data-calendar:
